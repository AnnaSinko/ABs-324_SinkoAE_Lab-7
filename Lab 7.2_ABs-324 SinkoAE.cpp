// Lab 7.2_ABs-324 SinkoAE.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <vector>
#include <string>
#include <locale.h> //подключение библиотеки для задач связанных из локализацией
using namespace std;    //используем пространство имен std

// Функция для получения k-й перестановки из чисел от 1 до n
string getKthPermutation(int n, int k, vector<int>& numbers) {
    if (n == 1) {   // базовый случай рекурсии: если остался один элемент
        return to_string(numbers[0]);   // возвращаем его
    }

    // Вычисление факториала для n-1
    int fact = 1;
    for (int i = 1; i <= n - 1; ++i) {
        fact *= i;
    }

    // Пример:
    // есть последовательность [1, 2, 3, 4], хотим найти k - ю перестановку
    // факториал n - 1 для n = 4 будет равен 3!= 6
    // Это означает, что между любыми двумя перестановками остается ровно 6 вариантов
    // Таким образом, можно использовать k для определения индекса первого числа в k / 6 перестановках,
    // а затем рекурсивно находить k % 6 перестановку для оставшихся чисел.

    // Определение индекса текущего числа в перестановке
    int index = (k - 1) / fact;

    // k - 1 - чтобы индексы шли с 0, а не с 1
    // Затем результат делится на fact, чтобы определить, на каком месте в текущем подмножестве перестановок находится нужное число

    // Получение числа по вычисленному индексу из вектора numbers (это число является следующим в текущей перестановке)
    int number = numbers[index];

    // Пример:
    // есть вектор numbers, содержащий числа от 1 до 4, и fact равен 6 (вычисленный факториал n - 1, где n - количество чисел в последовательности) и k равен 7
    // то (k - 1) / fact будет равно 0, так как 6 помещается 1 раз в интервал от 0 до 6
    // Это означает, что первый элемент в текущей перестановке должен быть numbers[0], который равен 1.

    // Удаление использованного числа из вектора
    numbers.erase(numbers.begin() + index);

    // Рекурсивный вызов функции для оставшихся чисел и добавление текущего числа к результату
    return to_string(number) + getKthPermutation(n - 1, k - index * fact, numbers);
}

int main() {
    setlocale(LC_ALL, "rus");   //установка русской локали

    // Вывод сообщения для пользователя и ввод значений n и k
    int n, k;
    cout << "Введите n: ";
    cin >> n;
    cout << "Введите k: ";
    cin >> k;

    // Создание вектора чисел от 1 до n
    vector<int> numbers(n);
    for (int i = 0; i < n; ++i) {
        numbers[i] = i + 1;
    }

    // Вывод k-й перестановки
    cout << "Выход: " << getKthPermutation(n, k, numbers) << endl;
    return 0;
}